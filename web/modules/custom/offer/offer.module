<?php
use Drupal\Core\Render\Element;
use Drupal\views\ViewExecutable;
/**
 * Fournit une définition de thème pour Entity offer de contenu personnalisée
 * {@inheritdoc}
 */
function offer_theme($existing, $type, $theme, $path) {
  return [
    'offer' => [
      'render element' => 'elements',
    ],
    'offer__full' => [
      'base hook' => 'offer',
    ],
    'offer__teaser' => [
      'base hook' => 'offer'
    ],
  ];
}
/**
 * Prepare des variables pour la template.
 * implements hook_preprocess_HOOK()
 */
function template_preprocess_offer(array &$variables)
{
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  $offer = $variables['elements']['#offer'];
// The full offer object
  $variables['offer'] = $offer;
}
/**
 * Adds template possibility for view modes
 * Implements hook_provider_theme_suggestions_hook_alter
 */
function offer_theme_suggestions_offer_alter( array &$suggestions, array $vars, $hook ) {
  if ( $offer = $vars['elements']['#offer'] ) {
    if (isset($vars['elements']['#view_mode'])) {
      $suggestions[] = 'offer__' . $vars['elements']['#view_mode'];
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function offer_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == '_apercu_de_offer')) {
    $view->element['#attached']['library'][] = 'offer/offer_overview_page';
  }
}

